/**
 * \file
 *
 * \author Ryan-David Reyes
 *
 * \brief This file contains methods for calculating the hip and knee
 * trajectories for the motors.
 */
#ifndef TRAJECTORY_H_
#define TRAJECTORY_H_

#include <stdlib.h>
#include <numerical.h>

/** brief Datatype that represents trajectory coefficients */
typedef struct tr_coeff_s {
  float a;
  float b;
  float c;
  float d;
  float e;
} tr_coeff_t;

typedef size_t (*tr_get_index_func_t)(size_t, size_t, uint16_t);

/**
 * \brief Compute the trajectory polynomial coefficients for pre swing
 * trajectory.
 *
 * \param coefficients The coefficients struct
 * \param knee_angle_max The maximum knee angle during the trajectory.
 * \param hip_angle_min The minimum hip angle during the trajectory
 */
void tr_computePreSwingKneeTrajCoeff(tr_coeff_t *coefficients,
    float knee_angle_max, float hip_angle_min);

/**
 * \brief Compute the trajectory polynomial coefficients for late swing
 * trajectory.
 *
 * \param coefficients The coefficients struct
 * \param knee_angle_max The maximum knee angle during the trajectory.
 * \param hip_angle_max The maximum hip angle during the trajectory
 */
void tr_computeLateSwingKneeTrajCoeff(tr_coeff_t *coefficients,
    float knee_angle_max, float hip_angle_max);

/**
 * \brief Compute the trajectory polynomial coefficients for hip swing
 * trajectory.
 *
 * \param coefficients The coefficients struct
 * \param hip_angle_min The minimum hip angle during the trajectory
 * \param hip_angle_max The minimum hip angle during the trajectory
 * \param tf The final time.
 * \param tps End time for pre-swing.
 */
void tr_computeHipTrajCoeff(tr_coeff_t *coefficients,
    float hip_angle_min, float hip_angle_max, float tf, float tps);


/**
 * \brief Compute the trajectory polynomial coefficients for hip swing
 * trajectory.
 *
 * \param coefficients The coefficients struct
 * \param hip_angle_min The minimum hip angle during the trajectory
 * \param hip_angle_max The minimum hip angle during the trajectory
 * \param tf The final time.
 * \param tps_perc The percent of tf where tps occurs.
 */
void tr_computeHipTrajCoeffScaled(tr_coeff_t *coefficients,
    float hip_angle_min, float hip_angle_max, float tf, float tps_perc);

/**
 * \brief Use the polynomial coefficients generated by
 * tr_computePreSwingKneeTrajCoeff or tr_computeLateSwingKneeTrajCoeff to
 * generate the knee angle as a function of hip angle.
 *
 * \param coefficients The coefficients struct
 * \param hip_angle The current hip angle
 * \return The current knee angle as a function of hip angle.
 */
float tr_computeKneeTraj(tr_coeff_t *coefficients, float hip_angle);


/**
 * \brief Use the polynomial coefficients generated by
 * tr_computeHipTrajCoeff generate the hip angle as a function of time.
 *
 * \param coefficients The coefficients struct
 * \param time The current time.
 * \return The current hip angle as a function of time.
 */
float tr_computeHipTraj(tr_coeff_t *coefficients, float time);

/**
 * \brief Use the polynomial coefficients generated by
 * tr_computePreSwingKneeTrajCoeff and tr_computeLateSwingKneeTrajCoeff to
 * generate the knee angle as a function of hip angle.
 *
 * \param preswing_knee_coeff the preswing knee coefficients.
 * \param lateswing_knee_coeff The late swing knee coefficients.
 * \param hip_angle The current hip angle
 * \return The current knee angle as a function of hip angle.
 */
float tr_computeFullKneeTraj(
    tr_coeff_t *preswing_knee_coeff,
    tr_coeff_t *lateswing_knee_coeff,
    float hip_angle);

/**
 * \brief Create a lookup table of the knee trajectory indexed by time.
 *
 *
 * \param hip_coeff The hip coefficients.
 * \param preswing_knee_coeff The preswing knee coefficients.
 * \param lateswing_knee_coeff The late swing knee coefficients.
 * \param dest_array The preallocated lookup table.
 * \param increment The increment between each member of lookup table.
 * \param pre_swing_time The time it takes for pre-swing to end.
 * \param final_time the Total time for the trajectory.
 *
 */
void tr_genKneeTimeLookupTable(tr_coeff_t *hip_coeff,
    tr_coeff_t *preswing_knee_coeff,
    tr_coeff_t *lateswing_knee_coeff,
    float *dest_array,
    size_t array_size,
    float increment,
    float pre_swing_time,
    float final_time);

/**
 * \brief Create a lookup table of the knee trajectory indexed by hip angle.
 *
 *
 * \param preswing_knee_coeff The preswing knee coefficients.
 * \param lateswing_knee_coeff The late swing knee coefficients.
 * \param dest_array The preallocated lookup table.
 * \param increment The increment between each member of lookup table.
 * \param pre_swing_time The time it takes for pre-swing to end.
 * \param final_time the Total time for the trajectory.
 *
 */
size_t tr_genKneeLookupTable(
    tr_coeff_t *preswing_knee_coeff,
    tr_coeff_t *lateswing_knee_coeff,
    float *dest_array,
    size_t array_size,
    float increment,
    float hip_min_angle,
    float hip_max_angle);

size_t tr_getLIndex(size_t hip_index_min, size_t hip_index_max,
    uint16_t hip_angle_count);

size_t tr_getRIndex(size_t hip_index_min, size_t hip_index_max,
    uint16_t hip_angle_count);

inline float tr_indexKneeLUT(float *lut, tr_get_index_func_t tr_get_index_func, size_t hip_index_min, size_t hip_index_max,
    uint16_t hip_angle_count) {

  size_t index = (*tr_get_index_func)(hip_index_min, hip_index_max, hip_angle_count);
  return lut[index];
}
#endif
